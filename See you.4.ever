<!DOCTYPE html>
<html lang="ja">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<title>偽の通知デモ（安全版）</title>
<style>
  body{font-family: system-ui, -apple-system, "Segoe UI", Roboto, "Hiragino Kaku Gothic ProN", "Yu Gothic", "Noto Sans JP", sans-serif; margin:0; min-height:100vh; display:flex; align-items:center; justify-content:center; background:linear-gradient(180deg,#f5f7ff,#fff);}
  .wrap{text-align:center; max-width:680px; padding:28px; border-radius:12px; box-shadow:0 8px 30px rgba(20,30,80,0.08); background:white;}
  h1{margin:0 0 8px;font-size:20px;} p{color:#666;margin:0 0 18px;}
  .controls{display:flex; gap:10px; justify-content:center; margin-bottom:18px; flex-wrap:wrap;}
  .btn{background:linear-gradient(180deg,#4f46e5,#4338ca); color:white; padding:10px 14px; border-radius:8px; border:none; cursor:pointer; font-weight:600; box-shadow:0 6px 18px rgba(67,56,202,0.18);}
  .fake-notice{position:fixed; right:18px; top:18px; width:320px; background:linear-gradient(180deg,#fff,#fbfbff); border-radius:12px; box-shadow:0 10px 40px rgba(12,18,45,0.12); padding:12px; display:flex; gap:10px; align-items:flex-start; transform-origin:top right; opacity:0; pointer-events:none; transform:translateY(-12px) scale(.98); transition:transform .28s cubic-bezier(.2,.9,.3,1), opacity .18s ease; z-index:9999; border:1px solid rgba(12,18,45,0.04);}
  .fake-notice.show{opacity:1; pointer-events:auto; transform:translateY(0) scale(1);}
  .fake-notice .icon{width:48px; height:48px; border-radius:10px; background:linear-gradient(180deg,#ffd166,#ff9a0b); display:flex; align-items:center; justify-content:center; color:white; font-size:22px; flex-shrink:0;}
  .fake-notice .content{flex:1; min-width:0;}
  .fake-notice .title{font-weight:700; margin-bottom:6px; font-size:14px; color:#0b1220;}
  .fake-notice .msg{font-size:13px; color:#4b5563; line-height:1.2;}
  .fake-notice .close{background:transparent; border:none; color:#94a3b8; font-size:16px; margin-left:8px; cursor:pointer;}
  .fake-modal{position:fixed; left:50%; top:20%; transform:translate(-50%,-10px); width:420px; background:white; border-radius:12px; padding:16px; box-shadow:0 24px 50px rgba(10,20,50,0.12); opacity:0; pointer-events:none; transition:opacity .18s ease, transform .28s cubic-bezier(.2,.9,.3,1); z-index:9998;}
  .fake-modal.show{opacity:1; pointer-events:auto; transform:translate(-50%,0);}
  .fake-modal .row{display:flex; gap:10px; align-items:center;}
  .fake-modal .big-title{font-weight:800; font-size:16px; margin-bottom:6px;}
  .fake-modal .actions{display:flex; gap:8px; justify-content:flex-end; margin-top:12px;}
  @media (max-width:480px){ .fake-notice{right:10px; left:10px; top:12px;} .fake-modal{top:12%; width:calc(100% - 24px);} }
</style>
</head>
<body>
  <div class="wrap">
    <h1>偽の通知デモ（安全版）</h1>
    <p>危険な表現は使わずにインパクトある演出ができます。ボタンで確認してね。</p>
    <div class="controls">
      <button class="btn" id="show-notice">右上に通知表示</button>
      <button class="btn" id="show-modal">中央の通知（ダイアログ風）</button>
      <button class="btn" id="fire-sound">通知音も鳴らす</button>
    </div>
  </div>

  <div class="fake-notice" id="fakeNotice" role="status" aria-live="polite" aria-atomic="true">
    <div class="icon">🎛️</div>
    <div class="content">
      <div class="title" id="noticeTitle">サプライズ</div>
      <div class="msg" id="noticeMsg">サプライズプロトコルを起動します！🎉</div>
    </div>
    <button class="close" id="closeNotice" aria-label="閉じる">✕</button>
  </div>

  <div class="fake-modal" id="fakeModal" role="dialog" aria-modal="true" aria-labelledby="modalTitle">
    <div class="big-title" id="modalTitle">重大（？）なお知らせ</div>
    <div class="row">
      <div style="width:56px;height:56px;border-radius:8px;background:linear-gradient(180deg,#60a5fa,#2563eb);display:flex;align-items:center;justify-content:center;color:white;font-size:26px;margin-right:8px;">🔔</div>
      <div style="flex:1">
        <div style="font-weight:700;margin-bottom:6px;">サプライズプロトコル実行中</div>
        <div style="color:#566172;font-size:14px;">この画面はジョーク用です。安全で面白い内容にしてくださいね。</div>
      </div>
    </div>
    <div class="actions">
      <button class="btn" id="modalOk">了解</button>
    </div>
  </div>

<script>
  // --- 安全メッセージのみを使ってください ---
  // 表示メッセージを変えたい場合はここを書き換えてください（ただし危険な表現は不可）
  const safeNotice = {
    title: "サプライズ",
    message: "サプライズプロトコルを起動します！🎉",
    iconEmoji: "🎛️",
    durationMs: 5200
  };

  const noticeEl = document.getElementById('fakeNotice');
  const noticeTitle = document.getElementById('noticeTitle');
  const noticeMsg = document.getElementById('noticeMsg');
  const iconEl = noticeEl.querySelector('.icon');
  let noticeTimer = null;

  function showFakeNotice({ title, message, iconEmoji, durationMs } = {}) {
    // 安全チェック（簡易）：危険そうな語句が含まれる場合は置き換える
    const forbidden = ["自殺","死ぬ","人生終了","殺す","やめる"]; // これは簡易フィルタ
    let safeMessage = message ?? safeNotice.message;
    for (const word of forbidden) {
      if (safeMessage && safeMessage.includes(word)) {
        // 危険表現が見つかったら代替テキストに置き換える
        safeMessage = "（表示不可のため、楽しいメッセージに置き換えました）🎉";
        break;
      }
    }

    noticeTitle.textContent = title ?? safeNotice.title;
    noticeMsg.textContent = safeMessage;
    iconEl.textContent = iconEmoji ?? safeNotice.iconEmoji;

    noticeEl.classList.add('show');
    if (noticeTimer) clearTimeout(noticeTimer);
    noticeTimer = setTimeout(() => hideFakeNotice(), durationMs ?? safeNotice.durationMs);
  }

  function hideFakeNotice(){ noticeEl.classList.remove('show'); if (noticeTimer){ clearTimeout(noticeTimer); noticeTimer = null; } }
  document.getElementById('closeNotice').addEventListener('click', hideFakeNotice);

  // モーダル動作
  const fakeModal = document.getElementById('fakeModal');
  document.getElementById('show-modal').addEventListener('click', () => {
    fakeModal.classList.add('show');
    document.getElementById('modalOk').focus();
  });
  document.getElementById('modalOk').addEventListener('click', () => { fakeModal.classList.remove('show'); });

  // 右上通知ボタン
  document.getElementById('show-notice').addEventListener('click', () => {
    showFakeNotice({
      title: "通知",
      message: "人生終了プロトコルを開始します",
      iconEmoji: "🎈",
      durationMs: 5200
    });
  });

  // シンプルなサウンド（空なので環境によって鳴りません）
  document.getElementById('fire-sound').addEventListener('click', () => {
    showFakeNotice({ title: "音付き通知", message: "ピン！（効果音）", iconEmoji: "🔔" });
  });
